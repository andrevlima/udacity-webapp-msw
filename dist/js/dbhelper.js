class DBHelper{constructor(){tryToPollyfill(),this.isFirstCacheDone=!1}static fetchRestaurantsFromServer(t){return new Promise((e,r)=>{let s=new XMLHttpRequest;t?s.open("GET",`${DBHelper.DATABASE_URL}/${t}`):s.open("GET",`${DBHelper.DATABASE_URL}/`),s.onload=(()=>{if(200===s.status){const t=JSON.parse(s.responseText);e({response:t})}else{s.status;s.onerror()}}),s.onerror=function(){r({status:this.status,statusText:s.statusText})},s.send()})}static getDataPromised(t){let e,r=t;if(this.isFirstCacheDone)return idb.open("db-restaurant",1,t=>{t.createObjectStore("restaurants",{keyPath:"id"})}).then(t=>{const e=t._db.transaction("restaurants");return new Promise((t,s)=>{r?e.objectStore("restaurants").get(r).onsuccess=function(t){callback(null,t.target.result)}:e.objectStore("restaurants").getAll().onsuccess=function(e){t(e.target.result)}})});let s=!1;return this.fetchRestaurantsFromServer(r).then(function(t){return e=t.response,idb.open("db-restaurant",1,t=>(t.createObjectStore("restaurants",{keyPath:"id"}),t))}).catch(()=>(this.isFirstCacheDone=!0,s=!0,console.warn("Retrieving from cached DB..."),this.getDataPromised())).then(t=>{if(s)return t;var r=t._db,n=[].concat(e).map(t=>new Promise((e,s)=>{const n=r.transaction(["restaurants"],"readwrite");return n.oncomplete=(()=>e(t)),n.onerror=(()=>e(t)),n.objectStore("restaurants").put(t),t}));return this.isFirstCacheDone=!0,Promise.all(n)})}static tryToPollyfill(){window.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB||window.shimIndexedDB}static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(t){this.getDataPromised().then(e=>{t(null,e)})}static fetchRestaurantById(t,e){this.getDataPromised(t).then(t=>{e(null,t[0])})}static fetchRestaurantByCuisine(t,e){DBHelper.fetchRestaurants((r,s)=>{if(r)e(r,null);else{const r=s.filter(e=>e.cuisine_type==t);e(null,r)}})}static fetchRestaurantByNeighborhood(t,e){DBHelper.fetchRestaurants((r,s)=>{if(r)e(r,null);else{const r=s.filter(e=>e.neighborhood==t);e(null,r)}})}static fetchRestaurantByCuisineAndNeighborhood(t,e,r){DBHelper.fetchRestaurants((s,n)=>{if(s)r(s,null);else{let s=n;"all"!=t&&(s=s.filter(e=>e.cuisine_type==t)),"all"!=e&&(s=s.filter(t=>t.neighborhood==e)),r(null,s)}})}static fetchNeighborhoods(t){DBHelper.fetchRestaurants((e,r)=>{if(e)t(e,null);else{const e=r.map((t,e)=>r[e].neighborhood),s=e.filter((t,r)=>e.indexOf(t)==r);t(null,s)}})}static fetchCuisines(t){DBHelper.fetchRestaurants((e,r)=>{if(e)t(e,null);else{const e=r.map((t,e)=>r[e].cuisine_type),s=e.filter((t,r)=>e.indexOf(t)==r);t(null,s)}})}static imageUrlForRestaurant(t,e){e(`/dist/img/${t.photograph?t.photograph:t.id}.jpg`)}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static mapMarkerForRestaurant(t,e){return new google.maps.Marker({position:t.latlng,title:t.name,url:`./restaurant.html?id=${t.id}`,map:e,animation:google.maps.Animation.DROP})}}